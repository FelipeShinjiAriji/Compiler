%option noyywrap
%{
int lines = 0;
int blankLines = 0;
int commentLines = 0;
int nonBlankLines = 0;
int semiColons = 0;
int includeDefine = 0;

int totalLines = 0;
int totalBlankLines = 0;
int totalCommentLines = 0;
int totalNonBlankLines = 0;
int totalSemiColons = 0;
int totalIncludeDefine = 0;
%}

%x N_LINE_COMMENT
%x LastLine

%%
"/*"            		   {BEGIN(N_LINE_COMMENT);}
<N_LINE_COMMENT>[^*\n]+    {}
<N_LINE_COMMENT>\n   	   {commentLines++; lines++;}
<N_LINE_COMMENT>"*/" 	   {commentLines++; BEGIN(INITIAL);}

.*"//".*\n?        {lines++; commentLines++; totalLines++; totalCommentLines++;}
.*;.*\n?           {lines++; nonBlankLines++; semiColons++; totalLines++;  totalNonBlankLines++; totalSemiColons++;}
.*#define.*\n?     {lines++; nonBlankLines++; includeDefine++; totalLines++;  totalNonBlankLines++; totalIncludeDefine++;}
.*#include.*\n?    {lines++; nonBlankLines++; includeDefine++; totalLines++;  totalNonBlankLines++; totalIncludeDefine++;}
\r?\n?             {lines++; blankLines++; totalLines++; totalBlankLines++;}
.+\n               {lines++; nonBlankLines++; totalLines++; totalNonBlankLines++;}

.+                 {BEGIN(LastLine);}                 
<LastLine><<EOF>>  {lines++; nonBlankLines++; totalLines++; totalNonBlankLines++; return 0;}

<<EOF>>            {lines++; blankLines++; totalLines++; totalBlankLines++; return 0;}

%%

int main (int argc , char ** argv){
    printf("   total    blank lines w/   nb, nc    semi- preproc. file\n");
    printf("   lines    lines comments    lines   colons  direct.\n");
    printf("--------+--------+--------+--------+--------+--------+----\n");
    if(argc < 2) {
		fprintf(stderr, "No input file provided.\n");
		return 1;
    }

    int i;
    for(i = 1; i < argc; i++) {
        FILE *f = fopen(argv[i], "r");
        if(!f) {
            perror(argv[i]);
            return (1);
        }
        yyrestart(f);
        yylex();
        fclose(f);
        
        printf("%8d %8d %8d %8d %8d %8d %s\n", lines, blankLines, commentLines, nonBlankLines, semiColons, includeDefine, argv[i]);

        lines = 0;
        blankLines = 0;
        commentLines = 0;
        nonBlankLines = 0;
        semiColons = 0;
        includeDefine = 0;
    }
    printf("%8d %8d %8d %8d %8d %8d total\n", totalLines, totalBlankLines, totalCommentLines, totalNonBlankLines, totalSemiColons, totalIncludeDefine);
    return 0;
}